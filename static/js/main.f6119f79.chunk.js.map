{"version":3,"sources":["scrape/scraper.js","components/TopBar.js","components/Heatmap.js","App.js","reportWebVitals.js","index.js"],"names":["API_KEY","process","console","log","axios","require","retryInterceptor","lfm","create","baseURL","method","lfmRetry","getPage","username","page","cb","a","get","params","api_key","format","limit","user","ret","res","data","pages","totalPages","promises","i","push","Promise","all","maxAttempts","waitTime","errorCodes","onRetry","error","warn","config","__retryCount","TopBar","props","state","currentPage","downloading","progress","userData","scrapeData","bind","updateProgress","updateUsername","this","setState","getAllPages","then","r","clean_data","all_tracks","forEach","tracks","track","date","Date","uts","artist","album","name","cleanData","sendData","event","target","value","Grid","container","spacing","justify","alignItems","height","item","xs","TextField","id","label","type","size","variant","color","fullWidth","onChange","CircularProgress","style","margin","display","Button","onClick","length","disabled","width","React","Component","d3","Heatmap","d","day","getFullYear","getMonth","getDate","nest","key","rollup","entries","years","groups","getUTCFullYear","reverse","cellSize","timeWeek","utcSunday","countDay","formatValue","formatDate","utcFormat","formatMonth","color_max","quantile","map","Math","abs","sort","ascending","scaleLinear","domain","interpolate","interpolateHcl","range","rgb","svg","select","attr","year","selectAll","join","append","text","count","utcYear","getUTCDay","month","values","utcMonths","utcMonth","filter","t","max","min","w","n","ceil","node","className","window","d3Collection","theme","createMuiTheme","palette","primary","pink","secondary","purple","App","selected","receiveData","new_data","view","padding","ThemeProvider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f6119f79.chunk.js","sourcesContent":["// lifted from https://lastfm.ghan.nl/export/\n\nconst API_KEY = process.env.REACT_APP_LASTFM_API_KEY;\nconsole.log(API_KEY)\n\nconst axios = require('axios');\nconst retryInterceptor = require('axios-retry-interceptor');\nconst FileSaver = require('file-saver');\n\n\nconst lfm = axios.create({\n        baseURL: 'https://ws.audioscrobbler.com/2.0',\n        method: 'get',\n      }),\n      lfmRetry = axios.create({\n        baseURL: 'https://ws.audioscrobbler.com/2.0',\n        method: 'get',\n      });\n\nconst typeData = {\n  scrobbles: {\n    key: 'scrobbles',\n    label: 'Scrobbles',\n    method: 'user.getRecentTracks',\n    rootItem: 'recenttracks'\n  },\n  loves: {\n    key: 'loves',\n    label: 'Loved tracks',\n    method: 'user.getLovedTracks',\n    rootItem: 'lovedtracks'\n  }\n};\n\nretryInterceptor(lfmRetry, {\n  maxAttempts: 5,\n  waitTime: 5000,\n  errorCodes: [404, 500, 501, 502, 503, 504],\n  onRetry: function(error){\n    console.warn(\"Performing retry \" + error.config.__retryCount);\n  }\n});\n\nasync function getPage(username, page, cb, lfm){\n  console.log(\"get page\" + page)\n  const ret = await lfm.get('/', {\n    params: {\n      api_key: API_KEY,\n      format: 'json',\n      method: 'user.getRecentTracks',\n      limit: 200,\n      user: username,\n      page: page\n    }\n  });\n\n  const res = ret.data['recenttracks'],\n        pages = res['@attr'].totalPages;\n\n  if (cb) cb(page, pages);\n  return res;\n}\n\nexport async function getAllPages(username, cb){\n  console.log(cb)\n  // debugger\n  try{\n    const res = await getPage(username, 1, cb, lfm),\n          pages = res['@attr'].totalPages,\n          promises = [res];\n\n    for (var i=2;i<=pages;i++){\n      promises.push(getPage(username, i, cb, lfmRetry));\n    }\n\n    return Promise.all(promises);\n\n  } catch(e) {\n    console.log(e);\n  }\n\n}\n\n\nexport function cleanData(data){\n  // var lines = [[\"uts\", \"utc_time\", \"artist\", \"album\", \"track\",].join(\",\") + \"\\r\\n\"];\n  \n  var all_tracks = [];\n  data.forEach(function(tracks){\n    tracks.track.forEach(function(track){\n      if (track.date){\n        all_tracks.push({\n          'date': new Date(track.date.uts*1000),\n          'artist': track.artist['#text'],\n          'album': track.album['#text'],\n          'track': track.name\n        })\n      }\n    });\n  });\n  return(all_tracks);\n}\n\n\nfunction saveData(data, form, fn) {\n\n  if (form.format == \"CSV\"){\n    var lines = [[\"uts\", \"utc_time\", \"artist\", \"artist_mbid\", \"album\", \"album_mbid\", \"track\", \"track_mbid\"].join(\",\") + \"\\r\\n\"];\n    data.forEach(function(tracks){\n      tracks.track.forEach(function(track){\n        if (track.date){\n          lines.push([\n            csv(track.date.uts),\n            csv(track.date['#text']),\n            csv(form.type==\"scrobbles\"?track.artist['#text']:track.artist.name),\n            csv(track.artist.mbid),\n            csv(form.type==\"scrobbles\"?track.album['#text']:\"\"),\n            csv(form.type==\"scrobbles\"?track.album.mbid:\"\"),\n            csv(track.name),\n            csv(track.mbid)\n          ].join(\",\") + \"\\r\\n\");\n        }\n      });\n    });\n    const csvblob = new Blob(lines, {type: \"text/csv\"});\n    return FileSaver.saveAs(csvblob, fn + \".csv\");\n  }\n\n\n  if (form.format == \"JSON\") {\n    const blob = new Blob([JSON.stringify(data)], {type: \"application/json\"});\n    return FileSaver.saveAs(blob, fn + \".json\");\n  }\n\n}\n\nfunction csv(val){\n  if (val)\n    return \"\\\"\" + (val).toString().replace(/\"/g, \"\\\"\\\"\") + \"\\\"\";\n  else\n    return \"\\\"\\\"\";\n}","import React from \"react\";\n\n\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nimport { getAllPages, cleanData } from '../scrape/scraper.js'\n\n\nclass TopBar extends React.Component {\n\n\tstate = {\n        username: '',\n        currentPage: 0,\n        totalPages: 0,\n        downloading: false,\n        progress: 0,\n        userData: ''\n    }\n\n    constructor(props){\n    \tsuper(props);\n    \tthis.scrapeData = this.scrapeData.bind(this);\n    \tthis.updateProgress = this.updateProgress.bind(this);\n    \tthis.updateUsername = this.updateUsername.bind(this);\n\n    }\n\n\n\n\n\n    scrapeData(){\n    \tconsole.log('scraping')\n    \tconsole.log(this.state.username);\n\n    \tthis.setState({downloading: true})\n    \tgetAllPages(this.state.username, this.updateProgress, process.env.REACT_APP_LASTFM_API_KEY).then(r => {\n    \t\tif (!r){\n    \t\t\tconsole.log('no data gotten!!');\n    \t\t\treturn;\n    \t\t}\n\n    \t\t// clean data\n    \t\tlet clean_data = cleanData(r);\n    \t\tthis.setState({userData: clean_data});\n\n\n    \t\tthis.props.sendData(clean_data)\n    \t})\n\n\n    }\n\n    updateProgress(page, pages){\n    \tconsole.log('updateprogress: page' + page + \"total pages\" + pages)\n\n    \tthis.setState({currentPage: this.state.currentPage + 1,\n    \t\t\t\t   totalPages: pages})\n\n    \tconsole.log(\"curentPage: \" + this.state.currentPage + \"totalPages: \" + this.state.totalPages + \" progress: \" )\n\n    \tthis.setState({progress: (this.state.currentPage / this.state.totalPages) * 100})\n    }\n\n    updateUsername(event){\n    \tthis.setState({username:event.target.value});\n    \tconsole.log('username:' + this.state.username);\n    }\n\n    render(){\n    \treturn(\n            <Grid container spacing={1} justify=\"flex-end\" alignItems=\"center\" height=\"100%\">\n            <Grid item xs={8}>\n                <TextField \n                    id=\"username\" \n                    label=\"Last.fm Username\" \n                    type=\"search\" \n                    size=\"small\" \n                    variant=\"outlined\" \n                    color=\"primary\"\n                    fullWidth \n                    onChange={this.updateUsername}/>\n            </Grid>\n            <Grid item xs={1}>\n                <CircularProgress variant=\"determinate\" value={this.state.progress} style={{margin:'auto', display:'block'}}/>\n                \n            </Grid>\n            <Grid item xs={3}>\n                <Button \n                onClick={this.scrapeData}\n                variant=\"contained\" \n                color=\"primary\"\n                size=\"large\"\n                {...this.state.username.length ? {disabled:false} : {disabled:true}}\n                style={{width: \"100%\", height:\"100%\"}}>Scrape Data</Button>\n            </Grid>\n            </Grid>\n\n        \n        )\n    }\n\n}\n\nexport default TopBar;","import React from \"react\";\n\nimport { nest } from 'd3-collection';\n// import {legend} from \"@d3/color-legend\";\nconst d3 = require('d3');\n\n// let data = 0;\n\nclass Heatmap extends React.Component {\n\n  constructor(props){\n    super(props);\n    // this.renderCalendar = this.renderCalendar.bind(this)\n  }\n\n  componentDidMount(){\n    let data = this.props.data;\n\n    data.forEach(function(d){\n      d.day = new Date(\n              d.date.getFullYear(), \n              d.date.getMonth(), \n              d.date.getDate());\n    })\n\n    data = nest()\n            .key(function(d){return(d.day)})\n            .rollup(function(d){return(d.length)})\n            .entries(data);\n\n    data.forEach(function(d){\n      d.date = new Date(d.key);\n    })    \n\n    console.log(data);\n\n    // debugger;\n    let years = d3.groups(data, d => d.date.getUTCFullYear()).reverse();\n    let cellSize = 17;\n    let width = 954;\n    let height = 153;\n    let weekday = \"sunday\";\n    let timeWeek = weekday === \"sunday\" ? d3.utcSunday : d3.utcMonday;\n    let countDay = weekday === \"sunday\" ? i => i : i => (i + 6) % 7;\n\n\n    let formatValue = d3.format(\"\")\n    let formatClose = d3.format(\"$,.2f\")\n    let formatDate = d3.utcFormat(\"%x\")\n    let formatDay = i => \"SMTWTFS\"[i]\n    let formatMonth = d3.utcFormat(\"%b\")\n\n    let color_max = d3.quantile(data.map(d => Math.abs(d.value)).sort(d3.ascending), 0.9975);\n    let color =  d3.scaleLinear().domain([0,color_max])\n        .interpolate(d3.interpolateHcl)\n        .range([d3.rgb(\"#111111\"), d3.rgb('#e91e63')]);\n        // d3.scaleSequential(d3.interpolateRdPu).domain([0, +color_max]);\n\n\n\n    function pathMonth(t) {\n      const n = weekday === \"weekday\" ? 5 : 7;\n      const d = Math.max(0, Math.min(n, countDay(t.getUTCDay())));\n      const w = timeWeek.count(d3.utcYear(t), t);\n      return `${d === 0 ? `M${w * cellSize},0`\n          : d === n ? `M${(w + 1) * cellSize},0`\n          : `M${(w + 1) * cellSize},0V${d * cellSize}H${w * cellSize}`}V${n * cellSize}`;\n    }\n\n\n    const svg = d3.select('#calendar-svg')\n      .attr(\"viewBox\", [0, 0, width, height * years.length])\n      .attr(\"font-family\", \"sans-serif\")\n      .attr(\"font-size\", 10);\n\n    const year = svg.selectAll(\"g\")\n    .data(years)\n    .join(\"g\")\n      .attr(\"transform\", (d, i) => `translate(40.5,${height * i + cellSize * 1.5})`);\n\n    year.append(\"text\")\n      .attr(\"x\", -5)\n      .attr(\"y\", -5)\n      .attr(\"font-weight\", \"bold\")\n      .attr(\"text-anchor\", \"end\")\n      .text(([key]) => key);\n\n    year.append(\"g\")\n      .attr(\"text-anchor\", \"end\")\n    .selectAll(\"text\")\n    .data(weekday === \"weekday\" ? d3.range(1, 6) : d3.range(7))\n    .join(\"text\")\n      .attr(\"x\", -5)\n      .attr(\"y\", i => (countDay(i) + 0.5) * cellSize)\n      .attr(\"dy\", \"0.31em\")\n      .text(formatDay);\n\n    year.append(\"g\")\n    .selectAll(\"rect\")\n    .data(weekday === \"weekday\"\n        ? ([, values]) => values.filter(d => ![0, 6].includes(d.date.getUTCDay()))\n        : ([, values]) => values)\n    .join(\"rect\")\n      .attr(\"width\", cellSize - 1)\n      .attr(\"height\", cellSize - 1)\n      .attr(\"x\", d => timeWeek.count(d3.utcYear(d.date), d.date) * cellSize + 0.5)\n      .attr(\"y\", d => countDay(d.date.getUTCDay()) * cellSize + 0.5)\n      .attr(\"fill\", d => color(d.value))\n    .append(\"title\")\n      .text(d => `${formatDate(d.date)}\n    ${formatValue(d.value)} songs played`);\n\n    // debugger;\n    const month = year.append(\"g\")\n    .selectAll(\"g\")\n    .data(([, values]) => d3.utcMonths(values[values.length - 1].date, d3.utcMonth(values[0].date)))\n    .join(\"g\");\n    // console.log(month);\n\n    month.filter((d, i) => i).append(\"path\")\n      .attr(\"fill\", \"none\")\n      .attr('class', 'month-path')\n      .attr(\"d\", pathMonth);\n\n\n    month.append(\"text\")\n      .attr(\"x\", d => timeWeek.count(d3.utcYear(d), timeWeek.ceil(d)) * cellSize + 2)\n      .attr(\"y\", -5)\n      .text(formatMonth);\n\n    console.log(month);\n\n    return svg.node();\n\n    }\n\n  render(){\n    return(\n    <div className=\"calendar-map\">\n      <svg id=\"calendar-svg\"></svg>\n    </div>\n    )\n  }\n\n\n}\n\n\nfunction nest_data(data){\n\treturn(\n\t    nest()\n\t    \t.key(function(d){return new Date(\n\t    \t\td.date.getFullYear(), \n\t    \t\td.date.getMonth(), \n\t    \t\td.date.getDay());\n\t    })\n\t    \t.rollup(function(d){return(d.length)})\n\t    \t.entries(data)\n\t)\n}\n\nexport default Heatmap;","import React from \"react\";\n\nimport './styles/index.scss';\nimport TopBar from './components/TopBar.js';\nimport Heatmap from './components/Heatmap.js';\nimport * as d3Collection from 'd3-collection';\n\n\nimport { createMuiTheme, makeStyles, ThemeProvider } from '@material-ui/core/styles';\nimport purple from '@material-ui/core/colors/purple';\nimport pink from '@material-ui/core/colors/pink';\nconst d3 = require('d3');\n\nwindow.d3 = d3;\nwindow.d3Collection = d3Collection;\n\n\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: pink,\n    secondary: purple,\n  },\n});\n\nclass App extends React.Component {\n\n  state = {\n    data: '',\n    selected: 'init'\n  }\n\n  constructor(props){\n    super(props);\n    this.receiveData = this.receiveData.bind(this);\n  }\n\n  receiveData(new_data){\n    this.setState({data: new_data,\n                   selected:'timeline'});\n    console.log('parent got data')\n    console.log(new_data)\n    // debugger;\n    // create_chart(new_data)\n\n  }\n\n\n\n  render(){\n    let view;\n    if (this.state.selected == \"init\"){\n      view = <h1 style={{padding: '1rem'}}>Scrape some data to continue!</h1>;\n    } else if (this.state.selected == \"timeline\") {\n      view = <Heatmap data={this.state.data} />;\n    }\n\n    return(\n    <ThemeProvider theme={theme}>\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <TopBar sendData={this.receiveData}/>\n      </header>\n\n      {view}\n    </div>\n    </ThemeProvider>\n    ); \n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}